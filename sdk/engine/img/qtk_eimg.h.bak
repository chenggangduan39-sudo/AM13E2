#ifndef QTK_ENGINE_IMG_QTK_EIMG
#define QTK_ENGINE_IMG_QTK_EIMG

#include "wtk/os/wtk_log.h"
#include "wtk/os/wtk_thread.h"
#include "wtk/os/wtk_blockqueue.h"
#include "wtk/asr/img/qtk_img.h"
#include "wtk/core/wtk_wavfile.h"

#include "qtk/qtk_api.h"
#include "qtk/session/qtk_session.h"
#include "qtk/engine/comm/qtk_engine_thread.h"
#include "qtk/engine/comm/qtk_engine_param.h"
#ifdef __cplusplus
extern "C" {
#endif
typedef struct qtk_eimg qtk_eimg_t;
#define QTK_img_FEED_STEP (20*2*16)
struct qtk_eimg {
	qtk_session_t *session;
	qtk_engine_param_t param;
	wtk_main_cfg_t *main_cfg;
	qtk_img_cfg_t *cfg;
	qtk_img_rec_t *img;
	qtk_engine_thread_t *thread;
	qtk_engine_callback_t *callback;
	void *notify_ths;
	qtk_engine_notify_f notify;
	unsigned feedend:1;
};

qtk_eimg_t* qtk_eimg_new(qtk_session_t *session, wtk_local_cfg_t *params);
int qtk_eimg_delete(qtk_eimg_t *e);

int qtk_eimg_start(qtk_eimg_t *e);
int qtk_eimg_feed(qtk_eimg_t *e,char *data,int bytes,int is_end);
int qtk_eimg_reset(qtk_eimg_t *e);

int qtk_eimg_cancel(qtk_eimg_t *e);
void qtk_eimg_set_notify(qtk_eimg_t *e,void *ths,qtk_engine_notify_f notify_f);

int qtk_eimg_set(qtk_eimg_t *e,char *data,int bytes);

#ifdef __cplusplus
};
#endif
#endif
