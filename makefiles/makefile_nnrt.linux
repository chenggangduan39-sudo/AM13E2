SHELL=bash
pwd=${shell pwd}

src_dir=wtk third/lapack qtk/nnrt
src_c=${shell find $(src_dir) -name "*.c"}
src_cpp=${shell find $(src_dir) -name "*.cpp"}

exclude_dir= wtk/lua wtk/semdlg wtk/tts wtk/dnnc wtk/http
exclude_c=${shell find $(exclude_dir) -name "*.c"}
exclude_cpp=${shell find $(exclude_dir) -name "*.cpp"}

src_f_c=$(filter-out $(exclude_c),$(src_c))
src_f_cpp=$(filter-out $(exclude_cpp),$(src_cpp))
c_objs=$(patsubst %.c,%.o,$(src_f_c))
cpp_objs=$(patsubst %.cpp,%.o,$(src_f_cpp))

lib_objs=$(c_objs) $(cpp_objs)
objs=$(lib_objs)

tool_dir=test/tool
tool_c=${shell find ${tool_dir} -name "*.c"}
tool_c=./test/tool/bfio/cmask_aec.c
#tool_c+=./test/tool/bfio/vboxebf3.c
tool_c=./test/tool/bfio/cmask_bf_pse.c
tool_e=${patsubst %.c,%,${tool_c}}
tool_cpp=${shell find ${tool_dir} -name "*.cpp"}
tool_cpp=
tool_cpp_e=${patsubst %.cpp,%,${tool_cpp}}

######################################################

############ test section ###############
test=./a.out
test_src=test/test.c

gprof_n=./a.out
gprof_n=./tool/cmask_aec
gprof_log=${gprof_n}.txt
grpof_dot=${gprof_n}.dot
gprof_png=${gprof_n}.png


############### compile section ###############
INC =-I .

#icc=1
ifeq ($(icc),1)
	CC=/opt/intel/bin/icc
	CXX=/opt/intel/bin/icc
else
	CC=gcc
	CXX=g++
endif

DNN_CFLAG=

use_static=0

onnx=1

ifeq ($(use_static), 1)
	ifeq ($(onnx),1)
		DNN_CFLAG+=-I /home/lixiao/tools/libs/onnx/onnxruntime-linux-x64-static_lib-1.19.0-glibc2_17/include -DONNX_DEC
	endif

	ncnn=0
	ifeq ($(ncnn),1)
		DNN_CFLAG+=-I ./third/libncnn_linux/include -DQTK_NNRT_NCNN
	endif
else
	ifeq ($(onnx),1)
		DNN_CFLAG+=-I ./third/onnxruntime/onnxruntime-linux-x64-1.12.1/include -DONNX_DEC
	endif

	ncnn=0
	ifeq ($(ncnn),1)
		DNN_CFLAG+=-I ./third/libncnn_linux/include -DQTK_NNRT_NCNN
	endif
endif
dist=1
ifeq ($(dist),1)
	OF=-O3 -ffast-math -Ofast -march=native -Wall -funroll-loops -Wno-unused-result
	WFLAGS= #-Werror
	CFLAGS=-Wall $(OF) $(INC) $(DNN_CFLAG)
    CFLAGS_TOOL=-Wall $(OF) $(INC)
else
	OF=-g
	CFLAGS=-Wall $(OF) $(INC) $(DNN_CFLAG) -Wno-write-strings
    CFLAGS_TOOL=-Wall $(OF) $(INC) -Wno-write-strings
	WFLAGS= #-Werror
endif
# LFLAGS=${libs} -lm -lpthread -ldl -lrt -lz #-ludev -lasound
LFLAGS=

ifeq ($(use_static), 1)
	ifeq ($(onnx),1)
		LFLAGS += -lonnxruntime -L /home/lixiao/tools/libs/onnx/onnxruntime-linux-x64-static_lib-1.19.0-glibc2_17/lib
	endif

	ifeq ($(ncnn),1)
		LFLAGS += -lncnn -L./third/libncnn_linux/lib
	endif
	LFLAGS += --static -D USE_STATIC
	CFLAGS += -D USE_STATIC
else
	ifeq ($(onnx),1)
		LFLAGS += -lonnxruntime -L ./third/onnxruntime/onnxruntime-linux-x64-1.12.1/lib
	endif

	ifeq ($(ncnn),1)
		LFLAGS += -lncnn -L./third/libncnn_linux/lib
	endif
	LFLAGS += -ludev -lasound
	ie=$(shell whereis libiconv|grep "so"|wc -l)
	ifeq (${ie},1)
		LFLAGS += -liconv
	endif
endif

LFLAGS+=${libs} -lm -lpthread -ldl -lrt -lz #-ludev -lasound

#share=0;

ifdef share
    CFLAGS+=-fPIC -shared
    lib=libwtkdlg.so
else
    lib=libwtkdlg.a
endif


%.o:%.c
	$(CC) $(CFLAGS) ${WFLAGS} -c -o $@ $<;

%.o:%.cpp
	$(CXX) $(CFLAGS) -c -o $@ $<

all: ${libs} $(lib) tools

#.PHONY:tools

tools:${lib}
	for i in  ${tool_cpp_e}; \
	 	do echo $${i}; \
		if [ ! -d tool ]; then mkdir tool; fi;\
		${CXX} $(CFLAGS_TOOL) -c -o $${i}.o  $${i}.cpp; \
		${CXX} $(CFLAGS_TOOL) -o tool/`basename $${i}`  $${i}.o  ${lib} $(LFLAGS)  ; \
	 done;
	for i in  ${tool_e}; \
	 	do echo $${i}; \
		if [ ! -d tool ]; then mkdir tool; fi;\
		${CC} $(CFLAGS_TOOL) ${WFLAGS} -c -o $${i}.o  $${i}.c; \
		${CXX} $(CFLAGS_TOOL) ${WFLAGS} -o tool/`basename $${i}`  $${i}.o  ${lib} $(LFLAGS); \
	 done;

prof:
	gprof ${gprof_n} >$(gprof_log)
	python2 ./py/gprof2dot.py $(gprof_log) > ${grpof_dot}
	dot -Tpng -o $(gprof_png) $(grpof_dot)


$(lib): $(lib_objs)
ifdef share
	echo "share"
	$(CC) $(CFLAGS) $(LINK_FLAGS) $(lib_objs) -o $(lib)
	#strip $(lib)
else
	ar rv $(lib) $(lib_objs)
endif


t:
	valgrind --leak-check=full --show-reachable=yes --track-origins=yes 
	valgrind  --log-file="v.log" --leak-check=full --show-reachable=yes --track-origins=yes  

clean:
	-rm $(objs) ${lib}

